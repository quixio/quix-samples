# timeout: 60
services:
  # External Kafka instance (source)
  external-kafka:
    image: docker.redpanda.com/redpandadata/redpanda:v24.2.4
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092
      - --advertise-kafka-addr internal://external-kafka:9092
      - --mode dev-container
      - --smp 1
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - test-network
    stop_grace_period: 3s

  # Quix Kafka instance (destination)
  quix-kafka:
    image: docker.redpanda.com/redpandadata/redpanda:v24.2.4
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092
      - --advertise-kafka-addr internal://quix-kafka:9092
      - --mode dev-container
      - --smp 1
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - test-network
    stop_grace_period: 3s

  # Generate data to external Kafka
  data-generator:
    build:
      context: ../../framework
      dockerfile: Dockerfile
    command: >
      sh -c "
        echo 'Waiting for external Kafka to be ready...' &&
        sleep 5 &&
        echo 'Generating test data to external Kafka...' &&
        python /tests/generate_data.py &&
        echo 'Test data generated successfully' &&
        echo 'Keeping data-generator alive to prevent test abort...' &&
        tail -f /dev/null
      "
    volumes:
      - ./generate_data.py:/tests/generate_data.py:ro
      - ./data.jsonlines:/tests/data.jsonlines:ro
    working_dir: /tests
    networks:
      - test-network
    depends_on:
      external-kafka:
        condition: service_healthy
    stop_grace_period: 3s

  # Kafka replicator source (consumes from external, produces to quix)
  kafka-source:
    build:
      context: ../../../python/sources/kafka
      dockerfile: dockerfile
    entrypoint: >
      sh -c "
        echo 'Waiting for data generator to populate external Kafka...' &&
        sleep 10 &&
        echo 'Starting Kafka replicator source...' &&
        python3 main.py
      "
    environment:
      - Quix__Broker__Address=quix-kafka:9092
      - Quix__Consumer__Group=kafka-source-test
      - Quix__Deployment__Id=test-kafka-source
      - output=replicated-topic
      - SOURCE_BROKER_ADDRESS=external-kafka:9092
      - SOURCE_TOPIC=original-topic
      - AUTO_OFFSET_RESET=earliest
      - CONSUMER_GROUP=kafka-replicator-test
    networks:
      - test-network
    depends_on:
      external-kafka:
        condition: service_healthy
      quix-kafka:
        condition: service_healthy
      data-generator:
        condition: service_started
    stop_grace_period: 3s

  # Verify output in Quix Kafka
  test-verifier:
    build:
      context: ../../framework
      dockerfile: Dockerfile
    command: >
      sh -c "
        echo 'Waiting for kafka source to replicate data...' &&
        sleep 5 &&
        echo 'Verifying replicated data in Quix Kafka...' &&
        python /tests/verify_output.py
      "
    environment:
      - Quix__Broker__Address=quix-kafka:9092
      - TEST_OUTPUT_TOPIC=replicated-topic
      - TEST_TIMEOUT=40
    volumes:
      - ./verify_output.py:/tests/verify_output.py:ro
    working_dir: /
    networks:
      - test-network
    depends_on:
      quix-kafka:
        condition: service_healthy
      kafka-source:
        condition: service_started
    stop_grace_period: 3s

networks:
  test-network:
    driver: bridge