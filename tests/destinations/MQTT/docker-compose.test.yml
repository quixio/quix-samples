# timeout: 60
services:
  mqtt-broker:
    image: eclipse-mosquitto:latest
    networks:
      - test-network
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -t '$$SYS/#' -C 1 -i healthcheck -W 3 || exit 1"]
      interval: 3s
      timeout: 5s
      retries: 10
    stop_grace_period: 3s
  kafka:
    image: docker.redpanda.com/redpandadata/redpanda:v24.2.4
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092
      - --advertise-kafka-addr internal://kafka:9092
      - --mode dev-container
      - --smp 1
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - test-network
    stop_grace_period: 3s
  mqtt-destination:
    build:
      context: ../../../python/destinations/MQTT
      dockerfile: Dockerfile
    environment:
      - Quix__Broker__Address=kafka:9092
      - consumer_group_name=mqtt-test-consumer
      - input=test-mqtt-input
      - mqtt_server=mqtt-broker
      - mqtt_port=1883
      - mqtt_topic_root=test/output
      - mqtt_version=3.1.1
      - mqtt_tls_enabled=false
    networks:
      - test-network
    depends_on:
      mqtt-broker:
        condition: service_healthy
      kafka:
        condition: service_healthy
    stop_grace_period: 3s
  test-runner:
    build:
      context: ../../framework
      dockerfile: Dockerfile
    environment:
      - Quix__Broker__Address=kafka:9092
      - TEST_INPUT_TOPIC=test-mqtt-input
      - TEST_MESSAGE_COUNT=1
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=test/output/#
    command: >
      sh -c "
        echo 'Installing MQTT client...' &&
        pip install paho-mqtt > /dev/null 2>&1 &&
        echo 'Producing test messages to Kafka...' &&
        python /tests/produce_test_data.py &&
        echo 'Waiting for MQTT destination to process messages...' &&
        sleep 5 &&
        echo 'Subscribing to MQTT broker to verify messages...' &&
        python /tests/verify_output.py
      "
    volumes:
      - ./produce_test_data.py:/tests/produce_test_data.py:ro
      - ./verify_output.py:/tests/verify_output.py:ro
    working_dir: /
    networks:
      - test-network
    depends_on:
      mqtt-broker:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mqtt-destination:
        condition: service_started
    stop_grace_period: 3s
networks:
  test-network:
    driver: bridge
