{
    "libraryItemId": "quixlake-destination",
    "name": "QuixLake S3 Sink",
    "language": "Python",
    "tags": {
        "Pipeline Stage": ["Destination"],
        "Type": ["Connectors"],
        "Category": ["Data lake", "Storage"]
    },
    "shortDescription": "Consume data from a Kafka topic and write it directly to S3 in Parquet format with optional QuixLake catalog registration.",
    "DefaultFile": "main.py",
    "EntryPoint": "dockerfile",
    "RunEntryPoint": "main.py",
    "IconFile": "icon.png",
    "Variables": [{
            "Name": "input",
            "Type": "EnvironmentVariable",
            "InputType": "InputTopic",
            "Description": "Name of the Kafka input topic to consume from",
            "DefaultValue": "sensor-data",
            "Required": true
        },
        {
            "Name": "S3_BUCKET",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "S3 bucket name for storing Parquet files",
            "DefaultValue": "",
            "Required": true
        },
        {
            "Name": "S3_PREFIX",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "S3 prefix/path for data files",
            "DefaultValue": "data",
            "Required": false
        },
        {
            "Name": "TABLE_NAME",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Table name for data organization and registration",
            "DefaultValue": "data",
            "Required": false
        },
        {
            "Name": "HIVE_COLUMNS",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Comma-separated list of columns for Hive partitioning (e.g., location,sensor_type)",
            "DefaultValue": "",
            "Required": false
        },
        {
            "Name": "TIMESTAMP_COLUMN",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Column containing timestamp values for time-based partitioning",
            "DefaultValue": "ts_ms",
            "Required": false
        },
        {
            "Name": "TIMESTAMP_FORMAT",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Time partition granularity",
            "DefaultValue": "day",
            "Required": false
        },
        {
            "Name": "QUIXLAKE_API_URL",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "QuixLake API URL for optional table registration (leave empty to skip)",
            "DefaultValue": "http://quixlake-api",
            "Required": false
        },
        {
            "Name": "AUTO_DISCOVER",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Automatically register table in QuixLake catalog on first write",
            "DefaultValue": "true",
            "Required": false
        },
        {
            "Name": "BATCH_SIZE",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Number of messages to batch before writing to S3",
            "DefaultValue": "1000",
            "Required": false
        },
        {
            "Name": "COMMIT_INTERVAL",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Kafka commit interval in seconds",
            "DefaultValue": "30",
            "Required": false
        },
        {
            "Name": "CONSUMER_GROUP",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Kafka consumer group name",
            "DefaultValue": "s3_direct_sink_v1.0",
            "Required": false
        },
        {
            "Name": "AUTO_OFFSET_RESET",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "Where to start consuming if no offset exists",
            "DefaultValue": "latest",
            "Required": false
        },
        {
            "Name": "AWS_ACCESS_KEY_ID",
            "Type": "EnvironmentVariable",
            "InputType": "Secret",
            "Description": "AWS Access Key ID for S3 access",
            "DefaultValue": "",
            "Required": false
        },
        {
            "Name": "AWS_SECRET_ACCESS_KEY",
            "Type": "EnvironmentVariable",
            "InputType": "Secret",
            "Description": "AWS Secret Access Key for S3 access",
            "DefaultValue": "",
            "Required": false
        },
        {
            "Name": "AWS_REGION",
            "Type": "EnvironmentVariable",
            "InputType": "FreeText",
            "Description": "AWS region for S3 bucket",
            "DefaultValue": "us-east-1",
            "Required": false
        }
    ],
    "DeploySettings": {
        "DeploymentType": "Service",
        "CpuMillicores": 200,
        "MemoryInMb": 500,
        "Replicas": 1,
        "PublicAccess": false,
        "ValidateConnection": false
    }
}